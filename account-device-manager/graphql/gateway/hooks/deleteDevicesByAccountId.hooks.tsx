/* istanbul ignore file */
/* AUTO-GENERATED, DO NOT EDIT THIS FILE */
/* eslint-disable */
/* @ts-nocheck */
import * as Types from '../generated/schema-types';

import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
const defaultOptions = {} as const;
export type DeleteDevicesByAccountIdMutationVariables = Types.Exact<{
  accountId: Types.Scalars['ID']['input'];
}>;


export type DeleteDevicesByAccountIdMutation = { __typename?: 'Mutation', deleteDevicesByAccountId: Array<{ __typename?: 'Device', id: string }> };


export const DeleteDevicesByAccountIdDocument = gql`
    mutation DeleteDevicesByAccountId($accountId: ID!) {
  deleteDevicesByAccountId(accountId: $accountId) {
    id
  }
}
    `;
export type DeleteDevicesByAccountIdMutationFn = Apollo.MutationFunction<DeleteDevicesByAccountIdMutation, DeleteDevicesByAccountIdMutationVariables>;

/**
 * __useDeleteDevicesByAccountIdMutation__
 *
 * To run a mutation, you first call `useDeleteDevicesByAccountIdMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteDevicesByAccountIdMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteDevicesByAccountIdMutation, { data, loading, error }] = useDeleteDevicesByAccountIdMutation({
 *   variables: {
 *      accountId: // value for 'accountId'
 *   },
 * });
 */
export function useDeleteDevicesByAccountIdMutation(baseOptions?: Apollo.MutationHookOptions<DeleteDevicesByAccountIdMutation, DeleteDevicesByAccountIdMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteDevicesByAccountIdMutation, DeleteDevicesByAccountIdMutationVariables>(DeleteDevicesByAccountIdDocument, options);
      }
export type DeleteDevicesByAccountIdMutationHookResult = ReturnType<typeof useDeleteDevicesByAccountIdMutation>;
export type DeleteDevicesByAccountIdMutationResult = Apollo.MutationResult<DeleteDevicesByAccountIdMutation>;
export type DeleteDevicesByAccountIdMutationOptions = Apollo.BaseMutationOptions<DeleteDevicesByAccountIdMutation, DeleteDevicesByAccountIdMutationVariables>;